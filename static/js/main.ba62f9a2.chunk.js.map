{"version":3,"sources":["ShowEmployees.jsx","AddEmployee.jsx","Employees.jsx","components/NavBar.jsx","components/Home.jsx","components/About.jsx","components/Contact.jsx","components/Posts.jsx","components/Post.jsx","App.js","serviceWorker.js","index.js"],"names":["ShowEmployees","_this","this","AllEmployees","props","employees","map","l","react_default","a","createElement","key","id","className","name","city","department","onClick","deleteEmployee","Component","AddEmployee","state","onChangeHandler","e","setState","Object","defineProperty","target","value","onSubmitListener","preventDefault","addNew","htmlFor","type","placeholder","onChange","Employees","addNewEmployee","data","Math","floor","random","newData","concat","toConsumableArray","filter","d","ShowEmployees_ShowEmployees","AddEmployee_AddEmployee","NavBar","react_router_dom","to","Home","About","Contact","Posts","posts","_this2","axios","get","then","res","slice","PostsList","post","title","body","Post","match","params","App","NavBar_NavBar","react_router","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba62f9a2.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\nexport default class ShowEmployees extends Component{\r\n    \r\n//    componenDidMount(){\r\n//        console.log(\"Component Mounted\");\r\n//    }\r\n//    componentDidUpdate(previousProps, previousState){\r\n//        console.log(\"Component Updated\");\r\n//        console.log(previousProps);\r\n//        console.log(previousState);\r\n//    }\r\n    \r\n    \r\n    \r\n    render(){\r\n        let List = this.props.employees;\r\n        let AllEmployees = List.map(\r\n        (l)=>{\r\n            return(\r\n                        <div key={l.id} className=\"main\">\r\n                                <div>{l.name}</div>\r\n                                <div>{l.city}</div>\r\n                                <div>{l.department}</div>\r\n                                <div> <button onClick={()=>{this.props.deleteEmployee(l.id)}} className=\"deleteButton\">Delete</button> </div>\r\n                    </div>  \r\n            );\r\n        }\r\n        );\r\n        return(\r\n        \r\n                <div>\r\n                    {AllEmployees}\r\n                </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\nexport default class AddEmployee extends Component{\r\n    state = {\r\n        name : null,\r\n        city : null,\r\n        department : null\r\n    }\r\n    \r\n    onChangeHandler = (e)=>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n       \r\n        \r\n    }\r\n    \r\n    onSubmitListener = (e)=>{\r\n        e.preventDefault();\r\n        this.props.addNew(this.state);\r\n         \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"form\">\r\n            \r\n                  <form>\r\n                    <label htmlFor=\"fname\">First Name</label>\r\n                    <input type=\"text\" id=\"name\" name=\"firstname\" placeholder=\"Your name..\" onChange={this.onChangeHandler}/>\r\n\r\n                    <label htmlFor=\"lname\">City</label>\r\n                    <input type=\"text\" id=\"city\" name=\"lastname\" placeholder=\"Your city name..\" onChange={this.onChangeHandler} />\r\n\r\n                    <label htmlFor=\"country\">Country</label>\r\n                    <select id=\"department\" name=\"country\"  onChange={this.onChangeHandler}>\r\n                      <option value=\"Computer Science\">Please Select </option>\r\n                       <option value=\"Computer Science\">Computer Science</option>\r\n                      <option value=\"Software Engineering\">Software Engineering</option>\r\n                      <option value=\"Information Technology\">Information Technology</option>\r\n                    </select>\r\n\r\n                    <input type=\"submit\" value=\"Submit\" onClick={this.onSubmitListener}/>\r\n                  </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport ShowEmployees from \"./ShowEmployees\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nexport default class Employees extends Component{\r\n    \r\n    state = {\r\n        employees : [\r\n              {id:1, name : \"Sanan\" , city : \"Kotla \" , department : \"Software Engineering\"} , \r\n           {id:2, name : \"Ali\" , city : \"Gujrat \" , department : \"Software Engineering\"} , \r\n           {id:3, name : \"Qasim\" , city : \"Gujrat \" , department : \"Computer Science\"}  \r\n        ]\r\n       \r\n    }\r\n    addNewEmployee = (data)=>{\r\n      \r\n        data.id = Math.floor((Math.random() * 100) + 1);\r\n        let newData = [...this.state.employees , data];\r\n        this.setState({\r\n            employees : newData\r\n        });\r\n    }\r\n    \r\n    deleteEmployee = (id)=>{\r\n        let newData = this.state.employees.filter(\r\n            (d)=>{\r\n                return d.id!==id\r\n            }\r\n        );\r\n        this.setState({\r\n            employees : newData\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            <ShowEmployees employees={this.state.employees} deleteEmployee={this.deleteEmployee} />\r\n             <AddEmployee addNew={this.addNewEmployee} />\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nexport default class NavBar extends Component{\r\n    render(){\r\n        return(\r\n        \r\n            <div>\r\n               \r\n               <ul>\r\n                      <li><NavLink to=\"/home\">Home</NavLink></li>\r\n                      <li><NavLink to=\"/contact\">Contact</NavLink></li>\r\n                      <li><NavLink to=\"/about\">About</NavLink></li>\r\n                      <li><NavLink to=\"/posts\">Posts</NavLink></li>\r\n                      <li><NavLink to=\"/students\">Students</NavLink></li>\r\n             </ul>\r\n\r\n               \r\n               \r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\n\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n        \r\n            <div>\r\n                <h1>Home Page</h1>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta officia perspiciatis nihil! Eveniet, ipsam aliquam ut eum repellendus! Fugiat id optio, cupiditate exercitationem, officiis voluptatem iusto magnam repellendus molestias qui!\r\n                </p>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\n\r\n\r\nexport default class About extends Component{\r\n    render(){\r\n        return(\r\n        \r\n            <div>\r\n                <h1>About Page</h1>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta officia perspiciatis nihil! Eveniet, ipsam aliquam ut eum repellendus! Fugiat id optio, cupiditate exercitationem, officiis voluptatem iusto magnam repellendus molestias qui!\r\n                </p>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\n\r\n\r\nexport default class Contact extends Component{\r\n    render(){\r\n       \r\n        return(\r\n        \r\n            <div>\r\n                <h1>Contact Page</h1>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta officia perspiciatis nihil! Eveniet, ipsam aliquam ut eum repellendus! Fugiat id optio, cupiditate exercitationem, officiis voluptatem iusto magnam repellendus molestias qui!\r\n                </p>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nexport default class Posts extends Component {\r\n    state = {\r\n        posts : []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(\r\n          (res)=>{\r\n               this.setState({\r\n                   posts : res.data.slice(0,20)\r\n               });\r\n         \r\n          }\r\n            \r\n        );\r\n    }\r\n    render(){\r\n        let PostsList = this.state.posts.map(\r\n            (post)=>{\r\n                return(\r\n                        <div key={post.id} className=\"post\">\r\n                            <h2> {post.title} </h2>\r\n                            <p>\r\n                                {post.body}\r\n                            </p>\r\n                            <Link to={\"/post/\"+post.id}>Read Full Post</Link>\r\n                        </div>\r\n                );\r\n            }\r\n        );\r\n        return(\r\n        <div className=\"center\">\r\n          {PostsList}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Post extends Component{\r\n    state = {\r\n        post : []\r\n    }\r\n    componentDidMount(){\r\n       let id = this.props.match.params.id;\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts/\"+id).then(\r\n        (res)=>{\r\n            this.setState({\r\n                post : res.data\r\n            });\r\n        }\r\n        );\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"posts\">\r\n                <div className=\"post\">\r\n                    <h1>\r\n                   {this.state.post.title}\r\n                </h1>\r\n                <p>\r\n                    {this.state.post.body}\r\n                </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport Employees from \"./Employees\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport {BrowserRouter , Route} from \"react-router-dom\";\nfunction App() {\n  return (\n  <BrowserRouter>\n      <div>\n      \n     <NavBar />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/students\" component={Employees} />\n            <Route path=\"/posts\" component={Posts} />\n            <Route path=\"/post/:id\" component={Post} />\n    </div>\n      </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}